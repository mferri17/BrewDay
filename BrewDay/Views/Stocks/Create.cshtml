@model BrewDay.Domain.Entities.Stock

@{
    ViewBag.Title = "Crea";
    ViewBag.Page = "#nav-stocks";
}

<h2>Crea una nuova Scorta</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-10">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group required">
            @Html.LabelFor(model => model.Ingredient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.IngReadonly != null && ViewBag.IngReadonly) // If we try to create a new Stock starting from an existing Ingredient
                {
                    @Html.DropDownList("IngredientId", (SelectList)ViewBag.Ingredients, new { @class = "form-control", @disabled = "" })
                }
                else
                {
                    @Html.DropDownList("IngredientId", (SelectList)ViewBag.Ingredients, string.Empty, htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.IngredientId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group required">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group required">
            @Html.LabelFor(model => model.ExpireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <div class="input-group-addon"> <span class="glyphicon glyphicon-calendar"></span> </div>
                    @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                </div>
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @rows = 4 })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crea" class="btn btn-primary" />
            </div>
        </div>
        @if (ViewBag.IngReadonly != null && (bool)ViewBag.IngReadonly)
        {
            <p><a href="@Url.Action("Index", "Ingredients")" class="btn btn-default pull-right">Torna alla lista Ingredienti</a></p>
        }
        else
        {
            <p><a href="@Url.Action("Index")" class="btn btn-default pull-right">Torna alla lista Scorte</a></p>
        }
    </div>
}
